##Loading data 
data<-read.csv("C:/Users/rohan/Downloads/ACCIDENT2007-FullDataSet.csv", header=T)
names(data)

##creating subset of data
accident <- data[c(-2,-4,-6,-10,-13,-14,-16,-22,-25,-30,-32,-33,-34,-35,-36,-37,-39,-40,-41,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55)]
names(accident)

##Assign NULL to unknown values and convert numeric variables into factors
#state
accident[ accident$STATE %in% c(99) , "STATE" ] <- NA
accident$STATE<-factor(accident$STATE,levels=c(1,2,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)
                       ,labels = c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District_of_Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maine","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New_Hampshire","New_Jersey","New_Mexico","New_York","North_Carolina","North_Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Puerto_Rico","Rhode_Island","South_Carolina","South_Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Virgin_Islands","Washington","West_Virginia","Wisconsin","Wyoming"))
#month
accident$MONTH  <- factor(accident$MONTH
                          , levels=c(1,2,3,4,5,6,7,8,9,10,11,12)
                          , labels=c( "JAN","FEB","MAR","APR"
                                      ,"MAY","JUN","JUL","AUG"
                                      ,"SEP","OCT","NOV","DEC"))
#road function clas
accident[ accident$ROAD_FNC %in% c(0,99) , "ROAD_FNC" ] <- NA
accident$ROAD_FNC<-factor(accident$ROAD_FNC,
                          levels=c(1,2,3,4,5,6,9,11,12,13,14,15,16,19),
                          labels=c("Rural Principal Arterial-Interstate","Rural Principal Arterial-Other","Rural Minor Arterial","Rural Major Collector","Rural Minor Collector","Rural Local Road or Street","Rural Unknown","Urban Principal Arterial - Interstate","Urban Principal Arterial -Other Freeways or Expressways","Urban Other Principal Arterial","Urban Minor Arterial","Urban Collector","Urban Local Road or Street","Urban Unknown"))
#route signing
accident[ accident$ROUTE %in% c(8,9) , "ROUTE" ] <- NA
accident$ROUTE<-factor(accident$ROUTE,
                       levels=c(1,2,3,4,5,6,7),
                       labels=c("Interstate","U.S. Highway","State Highway","LOCAL STREET","Township","Municipality","Frontage Road"))
#manner of collision
accident[ accident$MAN_COLL %in% c(99) , "MAN_COLL" ] <- NA
accident$MAN_COLL<-factor(accident$MAN_COLL,
                          levels=c(0,1,2,3,4,5,6,7,8,9,10,11),
                          labels=c("Not Collision with Motor Vehicle","Front-to-Rear","Front-to-Front","Front-to-Side, Same Direction","Front-to-Side, Opposite Direction","Front-to-Side, Right Angle","Front-to-Side/Angle-Direction Not Specified","Sideswipe - Same Direction","Sideswipe - Opposite Direction","Rear-to-Side","Rear-to-Rear","End-Swipes and Others"))
#relation to roadway
accident[ accident$REL_ROAD %in% c(99) , "REL_ROAD" ] <- NA
accident$REL_ROAD<-factor(accident$REL_ROAD,
                          levels=c(1,2,3,4,5,6,7,8,10,11),
                          labels=c("On Roadway","Shoulder","Median","Roadside","Outside Trafficway/Outside Right-of-way","Off Roadway","In Parking Lane/Zone","Gore","Separator","Two-way Continuous Left-turn Lane"))
#traffic way flow
accident[ accident$TRAF_FLO %in% c(9) , "TRAF_FLO" ] <- NA
accident$TRAF_FLO<-factor(accident$TRAF_FLO,
                          levels=c(1,2,3,4,5,6),
                          labels = c("Not Physically Divided(Two-Way Trafficway)","Divided Highway, Median Strip (WithoutTraffic Barrier)","Divided Highway, Median Strip (WithTraffic Barrier)","One-Way Trafficway","Not Physically Divided (With Two-Way Continuous Left-Turn Lane)","Entrance/Exit Ramp"))
#alignment
accident[ accident$ALIGNMNT %in% c(9) , "ALIGNMNT" ] <- NA
accident$ALIGNMNT<-factor(accident$ALIGNMNT,
                          levels = c(1,2),
                          labels = c("Straight","Curved"))
#road way surface type
accident[ accident$PAVE_TYP %in% c(8,9) , "PAVE_TYP" ] <- NA
accident$PAVE_TYP <- factor(accident$PAVE_TYP
                            , levels=c(1,2,3,4,5)
                            , labels=c( "Concrete","Blacktop","Brick","Slag","Dirt"))
#surrounding conditions of roadway
accident[ accident$SUR_COND %in% c(8,9) , "SUR_COND" ] <- NA
accident$SUR_COND<-factor(accident$SUR_COND,
                          levels = c(1,2,3,4,5),
                          labels=c("Dry","Wet","snow","ice","gravel"))
#traffic lights functioning
accident[ accident$T_CONT_F %in% c(9) , "T_CONT_F" ] <- NA
accident$T_CONT_F<-factor(accident$T_CONT_F,
                          levels = c(0,1,2,3),
                          labels=c("No Controls","Device Not Functioning","Functioning Improperly","Device Functioning Properly"))
#hit and run
accident$HIT_RUN<-factor(accident$HIT_RUN,
                         levels=c(0,1,2,3,4,5),
                         labels=c("No Hit-and-Run","Hit Motor Vehicle","Hit Pedestrian","Hit Parked Vehicle","Driver Leaves Scene after Non-Collision Event","Hit-and-Run, Other Involved Person Left Scene"))
#light condition
accident[ accident$LGT_COND %in% c(9) , "LGT_COND" ] <- NA
accident$LGT_COND<-factor(accident$LGT_COND,
                          levels=c(1,2,3,4,5),
                          labels=c("Daylight","Dark","Dark but Lighted","Dawn","Dusk"))
#weather condition
accident[ accident$WEATHER1 %in% c(0,8) , "WEATHER1" ] <- NA
accident$WEATHER1<-factor(accident$WEATHER1,
                          levels=c(1,2,3,4,5,6,7),
                          labels=c("Clear","Rain","Sleet","snow","Fog","Severe Crosswinds","Blowing Sand"))
#construction and maintanace zone
accident$C_M_ZONE<-factor(accident$C_M_ZONE,
                          levels=c(0,1,2,3,4),
                          labels=c("None","Construction","Maintenance","Utility","Work Zone"))
#school bus related
accident$SCH_BUS<-factor(accident$SCH_BUS,
                         levels=c(0,1),
                         labels=c("no","yes"))
#day of week
accident$DAY_WEEK<-factor(accident$DAY_WEEK,
                          levels =c(1,2,3,4,5,6,7),
                          labels = c("Sun","Mon","Tue","Wed","Thu","Fri","Sat"))
                        
#Number of lanes
accident[ accident$NO_LANES %in% c(9) , "NO_LANES" ] <- NA
accident$NO_LANES<-as.factor(accident$NO_LANES)

#Hour
accident[ accident$HOUR %in% c(0,99) , "NO_LANES" ] <- NA
accident$HOUR<-factor(accident$HOUR)
#Removing null values
accident <- accident[rowSums(is.na(accident)) == 0,]

#summary of data
summary(accident)



##Fatalities by month##
library("data.table", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
data_month<-data.table(accident$MONTH,accident$FATALS)
data_month<-data_month[,sum(V2),by=V1]
names(data_month)<-c("month","fatals")
png(filename="month.png" , width=1000, height=500)
ggplot(data=data_month, aes(x=month, y=fatals, fill=month)) +
  geom_bar(stat="identity")+xlab("MONTH") + ylab("Total fatalities") +
  ggtitle("FATALITIES by MONTH")+
theme( plot.title = element_text(size=14, face="bold") , 
       axis.text.x= element_text(angle=40, size=13), 
       axis.text.y= element_text(angle=0, size=14)
       ,legend.position="right")
dev.off()



###Fatalities by day of week####
data_day<-data.table(accident$DAY_WEEK,accident$FATALS)
data_day<-data_day[,sum(V2),by=V1]
names(data_day)<-c("day_week","fatals")
png(filename="day.png" , width=900, height=400)
ggplot(data=data_day, aes(x=day_week, y=fatals, fill=day_week)) +
  geom_bar(stat="identity")+xlab("DAY Of Week") + ylab("TOTAL FATALITIES") +
  ggtitle("FATALITIES by DAY OF WEEK")+
  theme( plot.title = element_text(size=14, face="bold") , 
         axis.text.x= element_text(angle=0, size=13), 
         axis.text.y= element_text(angle=0, size=13)
         ,legend.position="right")
dev.off()


##Fatalities by State##
data_state<-data.table(accident$STATE,accident$FATALS)
data_sate<-data_state[,sum(V2),by=V1]
names(data_state)<-c("state","fatals")
png(filename="state.png" , width=1000, height=500)
ggplot(data=data_state, aes(x=state, y=fatals, fill=state)) +
  geom_bar(stat="identity")+xlab("STATE") + ylab("TOTAL FATALITIES ") +
  ggtitle("FATALITIES by STEATE ")+
theme( plot.title = element_text(size=14, face="bold") , 
       axis.text.x= element_text(angle=90, size=12), 
       axis.text.y= element_text(angle=0, size=12)
       ,legend.position="right")
dev.off()



#####  Fatalities by hour  ##############
hour<-as.factor(accident$HOUR)
data_hour<-data.table(hour,accident$FATALS)
data_hour<-data_hour[,sum(V2),by=hour]
names(data_hour)<-c("HOUR","fatals")
png(filename="hour.png" , width=1000, height=500)
ggplot(data=data_hour, aes(x=data_hour$HOUR, y=data_hour$fatals, fill=data_hour$HOUR)) +
geom_bar(stat="identity")+xlab("Time of day") + ylab("Total bill") +
ggtitle("FATALITIES")+theme( plot.title = element_text(size=14, face="bold") , 
                             axis.text.x= element_text(angle=0, size=12), 
                             axis.text.y= element_text(angle=0, size=12)
                             ,legend.position="right")
dev.off()



#####number of accidents by road function class#####
accident$ROAD_FNC<-factor(accident$ROAD_FNC,
                          labels=c(1,2,3,4,5,6,9,11,12,13,14,15,16,19))
ggp <- ggplot(data.frame(accident$ROAD_FNC),aes(x=accident$ROAD_FNC))
ggp + geom_histogram(fill="lightgreen")+xlab("Road function class")+ylab("number of accidents")+
ggtitle("number of accidents by road function class")+theme( plot.title = element_text(size=14, face="bold") , 
                                                                     axis.text.x= element_text(angle=90, size=12), 
                                                                     axis.text.y= element_text(angle=0, size=12)
                                                                     ,legend.position="right")
legend("topright", levels(accident$ROAD_FNC),fill = rainbow(14),ncol=1,cex=0.75)




##Number of accidents by Route########
ggp <- ggplot(data.frame(accident$ROUTE),aes(x=accident$ROUTE))
ggp + geom_histogram(fill="lightgreen")+xlab("Route")+ylab("number of accidents")+
ggtitle("Number of accidents by Route")+theme( plot.title = element_text(size=14, face="bold") , 
                                                                     axis.text.x= element_text(angle=70, size=12), 
                                                                     axis.text.y= element_text(angle=0, size=12)
                                                                     ,legend.position="right")



#######number of accidents by Relation to road#######
ggp <- ggplot(data.frame(accident$REL_ROAD),aes(x=accident$REL_ROAD))
ggp + geom_histogram(fill="lightgreen")+xlab("Relation to road")+ylab("number of accidents")+
ggtitle("number of accidents by Relation to road")+theme( plot.title = element_text(size=14, face="bold") , 
                                                                     axis.text.x= element_text(angle=70, size=12), 
                                                                     axis.text.y= element_text(angle=0, size=12)
                                                                     ,legend.position="right")


######number accidents by speedlimit#########
speed<-as.factor(accident$SP_LIMIT)
ggp <- ggplot(data.frame(speed),aes(x=speed))
ggp + geom_histogram(fill="lightgreen")+ggtitle("number accidents by speedlimit")+xlab("speed limit")+ylab("number of accidents")
#####numberof accidents by hit and run######
accident$HIT_RUN<-factor(accident$HIT_RUN,labels = c(1,2,3,4,5,6))
ggp <- ggplot(data.frame(accident$HIT_RUN),aes(x=accident$HIT_RUN))
ggp + geom_histogram(fill="lightgreen")+xlab("hit and run")+ylab("number of accidents")+
  ggtitle("numberof accidents by hit and run")+theme( plot.title = element_text(size=14, face="bold") , 
                                                                     axis.text.x= element_text(angle=0, size=12), 
                                                                     axis.text.y= element_text(angle=0, size=12)
                                                                     ,legend.position="right")



########number of accidents by light condition############
ggp <- ggplot(data.frame(accident$LGT_COND),aes(x=accident$LGT_COND))
ggp + geom_histogram(fill="lightgreen")+ggtitle("number of accidents by light condition")+xlab("light condition")+ylab("number of accidents")



#####persons which are not occupants of motor vehicle######
accident$PEDS<-factor(accident$PEDS)
ggp <- ggplot(data.frame(accident$PEDS),aes(x=accident$PEDS))
ggp + geom_histogram(fill="lightgreen")+ggtitle("persons which are not occupants of motor vehicle involved in accident")+xlab("PEDS")+ylab("number of accidents")



#which type of accident is more frequent in diff road types#
library(MASS)
tbl<-table(accident$MAN_COLL,accident$PAVE_TYP,dnn=c("MAN_COLL","PAVE_TYP"))
tbl
chisq.test(tbl)
barplot(tbl,col=rainbow(12),beside = T,main = "Manner of accident by road type",xlab = "Road surface type",ylab = "number of accidents")
legend("topright", levels(accident$MAN_COLL),fill = rainbow(12),ncol=1,cex=0.50)



###accidents by Alignment and number of lanes#####
tbl<-table(accident$NO_LANES,accident$ALIGNMNT,dnn=c("alignment","no. of lanes"))
tbl
chisq.test(tbl)
barplot(tbl,col=rainbow(7),beside = T,main = "accidents by Alignment and number of lanes",xlab = "Alignment",ylab = "number of accidents")
legend("topright", c("1", "2","3","4","5","6","7"),fill = rainbow(7))


######accidents by surrounding conditions and trafic contrls######
tbl<-table(accident$T_CONT_F,accident$SUR_COND,dnn=c("SUR_COND","T_CONT_F"))
tbl
chisq.test(tbl)
barplot(tbl,col=rainbow(4),beside = T,main = "accidents by surrounding conditions and trafic contrls",xlab = "Surrounding conditions",ylab = "number of accidents")
legend("topright", levels(accident$T_CONT_F),fill = rainbow(4),ncol=2,cex=0.75)


###accidents by weather conditions and traffic flow#####
tbl<-table(accident$TRAF_FLO,accident$WEATHER1,dnn=c("WEATHER1","TRAF_FLO"))
tbl
chisq.test(tbl)
barplot(tbl,col=rainbow(6),beside = T,main = "accidents by weather conditions and traffic flow",xlab = "Weather conditions",ylab = "number of accidents")
legend("topright", levels(accident$TRAF_FLO),fill = rainbow(6),ncol=1,cex=0.70)



#####################predict fatalities######################################

library(RCurl)
library(caret)
library(MASS) 
library(leaps) 
library(glmnet)
library(ROCR)
library(e1071)
library(bit64)
subsets<-regsubsets(FATALS~VE_TOTAL+PERSONS+PEDS+ROAD_FNC+MAN_COLL+SP_LIMIT+ALIGNMNT+
                      T_CONT_F+HIT_RUN+LGT_COND+C_M_ZONE+DRUNK_DR,
                    data=accident,nbest=1,really.big=T)
sub.sum <- summary(subsets)
sub.sum
rn_train <- sample(nrow(accident),
                   floor(nrow(accident)*0.8))
train <- accident[rn_train,]
test <- accident[-rn_train,]
model_mlr<-lm(FATALS~VE_TOTAL+PERSONS+PEDS+MAN_COLL+SP_LIMIT+DRUNK_DR,data = train)
summary(model_mlr)
plot(model_mlr)
prediction <- predict(model_mlr, interval="prediction",
                      newdata=test)
test$score <- predict(model_mlr, type="response",
                      newdata=test)

sqrt(sum((prediction[,"fit"] - test$FATALS)^2)/nrow(test))
errors <- prediction[,"fit"] - test$FATALS
hist(errors)
rel_change <- 1 - ((test$FATALS - abs(errors)) / test$FATALS)
table(rel_change<0.10)["TRUE"] / nrow(test)
c <- confusionMatrix(as.integer(test$score > 0.5),
                     test$FATALS)
c$table